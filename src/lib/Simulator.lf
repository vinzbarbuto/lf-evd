target Python {
  files: ["../../images/", "./utils/"]
}

reactor TrafficLightsSimulator {
  preamble {=
    from utils.traffic_signal import TrafficSignalController
    from utils.ui import TrafficSignalUI
    import threading
  =}

  state controller
  state ui
  state initialized = False
  timer traffic_lights_tick(10msec, 1 sec)
  timer step(10msec, 100msec)
  
  input signal

  reaction(startup) {=
    self.controller = self.TrafficSignalController(num_signals=4)
    self.ui = self.TrafficSignalUI(self.controller)
    self.initialized = False
  =}

  reaction(step) {=
    try:
        if not self.initialized and self.threading.current_thread() is self.threading.main_thread():
            self.ui.init_pygame()
            self.initialized = True
            
        if self.ui and self.ui.running:
            start = lf.time.physical_elapsed()
            self.ui.step()
            print(f"[SIMULATOR] UI step took {lf.time.physical_elapsed() - start} seconds")
    except SystemExit:
        request_stop()
    except Exception as e:
        print(f"Error in UI step: {e}")
        self.ui.cleanup()
        request_stop()
  =}

  reaction(traffic_lights_tick) {=
    self.controller.manage_signals()
  =}

  reaction(shutdown) {=
    print("[SIMULATOR] Shutting down")
    if hasattr(self, "ui") and self.ui:
        self.ui.cleanup()
  =}
}